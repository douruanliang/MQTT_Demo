plugins {
    id 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.google.protobuf'
android {
    compileSdk 31
    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String","MQTT_HOST","\"192.168.159.50\"")
            buildConfigField("String","API_HOST","\"192.168.159.50\"")
        }
        debug {
            buildConfigField("String","MQTT_HOST","\"192.168.159.50\"")
            buildConfigField("String","API_HOST","\"192.168.159.50\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    greendao {
        // 数据库版本号
        schemaVersion 2
        // 生成数据库文件的目录
        targetGenDir 'src/main/java'
    }
    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            proto {
                srcDir 'src/main/proto' //指定.proto文件路径
            }
        }
    }
    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.7.0'
        }
        plugins {
            javalite {
                // The codegen for lite comes as a separate artifact
                artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
            }
        }
        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    // In most cases you don't need the full Java output
                    // if you use the lite output.
                    remove java
                }
                task.plugins {
                    javalite { }
                }
            }
        }
        //生成目录
        //generatedFilesBaseDir = "$projectDir/src/generated"
    }
}



dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.appcompat:appcompat:$versions.appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayoutVersion"
    implementation "com.google.android.material:material:$versions.materialVersion"

    // architecture components
    implementation "androidx.fragment:fragment-ktx:$versions.fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"


    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.4'

    api 'com.google.code.gson:gson:2.9.0'
    implementation 'org.greenrobot:greendao:3.3.0'
    api 'org.greenrobot:eventbus:3.1.1'

    implementation "io.reactivex.rxjava2:rxjava:2.2.15"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    api "com.squareup.retrofit2:retrofit:2.9.0"
    api "com.squareup.okhttp3:okhttp:4.10.0"
    api "com.squareup.retrofit2:converter-gson:2.9.0"

    api 'com.drakeet.multitype:multitype:4.3.0'

    implementation 'com.google.protobuf:protobuf-lite:3.0.0'




}
