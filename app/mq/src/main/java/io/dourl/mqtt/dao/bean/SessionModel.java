package io.dourl.mqtt.dao.bean;

import com.google.gson.Gson;


import org.greenrobot.greendao.DaoException;
import org.greenrobot.greendao.annotation.Convert;
import org.greenrobot.greendao.annotation.Entity;
import org.greenrobot.greendao.annotation.Generated;
import org.greenrobot.greendao.annotation.Id;
import org.greenrobot.greendao.annotation.Keep;
import org.greenrobot.greendao.annotation.ToOne;
import org.greenrobot.greendao.annotation.Unique;
import org.greenrobot.greendao.converter.PropertyConverter;

import io.dourl.mqtt.base.BaseObject;
import io.dourl.mqtt.model.ClanModel;
import io.dourl.mqtt.model.message.chat.MessageType;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table "TABLE_SESSION".
 */
@Entity
public class SessionModel implements BaseObject {

    @Id(autoincrement = true)
    protected Long id;

    @Unique
    protected String sessionID;
    protected String sessionName;
    protected String sessionIcon;
    protected String content;
    protected Long createTime;
    protected Long msgDbId;
    /**
     * 消息类型，普通消息，通知等等
     * 具体的消息类型，请关注body中的type
     */
    @Convert(converter = MessageModel.MessageTypeConverter.class, columnType = Integer.class)
    protected MessageType msgType;

    protected String uid;
    protected int unreadMsgCount;

    @Convert(converter = MessageModel.StatusConverter.class, columnType = String.class)
    protected MessageModel.Status sendStatus;

    protected String draft;

    protected Integer priority;

    /**
     * 群聊信息
     */
    @Convert(converter = ClanConverter.class, columnType = String.class)
    protected ClanModel clan;

    protected Long localId;
    @ToOne(joinProperty = "uid")
    protected UserModel user;

    @ToOne(joinProperty = "msgDbId")
    protected MessageModel sessionMsg;


    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getSessionID() {
        return sessionID;
    }

    public void setSessionID(String sessionID) {
        this.sessionID = sessionID;
    }

    public String getSessionName() {
        return sessionName;
    }

    public void setSessionName(String sessionName) {
        this.sessionName = sessionName;
    }

    public String getSessionIcon() {
        return sessionIcon;
    }

    public void setSessionIcon(String sessionIcon) {
        this.sessionIcon = sessionIcon;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public Long getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    public Long getMsgDbId() {
        return msgDbId;
    }

    public void setMsgDbId(Long msgDbId) {
        this.msgDbId = msgDbId;
    }

    public MessageType getMsgType() {
        return msgType;
    }

    public void setMsgType(MessageType msgType) {
        this.msgType = msgType;
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    public int getUnreadMsgCount() {
        return unreadMsgCount;
    }

    public void setUnreadMsgCount(Integer unreadMsgCount) {
        this.unreadMsgCount = unreadMsgCount;
    }

    public MessageModel.Status getSendStatus() {
        return sendStatus;
    }

    public void setSendStatus(MessageModel.Status sendStatus) {
        this.sendStatus = sendStatus;
    }

    public String getDraft() {
        return draft;
    }

    public void setDraft(String draft) {
        this.draft = draft;
    }

    public Long getLocalId() {
        return localId;
    }

    public void setLocalId(Long localId) {
        this.localId = localId;
    }

    public void addUnReadCount() {
        unreadMsgCount = unreadMsgCount + 1;
    }

    static class ClanConverter implements PropertyConverter<ClanModel, String> {

        @Override
        public ClanModel convertToEntityProperty(String databaseValue) {
            return ClanModel.buildClan(databaseValue);
        }

        @Override
        public String convertToDatabaseValue(ClanModel entityProperty) {

            return new Gson().toJson(entityProperty);
        }
    }








    public void setUnreadMsgCount(int unreadMsgCount) {
        this.unreadMsgCount = unreadMsgCount;
    }

    @Override
    public String toString() {
        return "SessionModel{" +
                "sessionMsg=" + sessionMsg +
                ", id=" + id +
                ", sessionID='" + sessionID + '\'' +
                ", sessionName='" + sessionName + '\'' +
                ", sessionIcon='" + sessionIcon + '\'' +
                ", content='" + content + '\'' +
                ", createTime=" + createTime +
                ", msgDbId=" + msgDbId +
                ", msgType=" + msgType +
                ", uid='" + uid + '\'' +
                ", unreadMsgCount=" + unreadMsgCount +
                ", sendStatus=" + sendStatus +
                ", draft='" + draft + '\'' +
                ", localId=" + localId +
                ", user=" + user +
                '}';
    }

    public ClanModel getClan() {
        /*if (this.clan == null) {
            this.clan = getSessionMsg().getClan();
        }*/
        return this.clan;
    }

    public void setClan(ClanModel clan) {
        this.clan = clan;
    }

    public Integer getPriority() {
        return this.priority;
    }

    public void setPriority(int priority) {
        this.priority = priority;
    }

    public void setPriority(Integer priority) {
        this.priority = priority;
    }




    @Override
    public boolean equals(Object obj) {
        return sessionID.equals(((SessionModel) obj).sessionID);
    }
}
